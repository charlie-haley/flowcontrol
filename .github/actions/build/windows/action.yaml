inputs:
  token:
    description: "GitHub token"
  version: 
    description: 'The version to release'
  release_url: 
    description: 'The URL of the Release to upload assets to'
  release: 
    description: 'Whether to push assets to this release or just run the build'
    default: false
runs:
  using: "composite"
  steps: 
    # compile gui app for windows/amd64
    - name: build project for windows/amd64
      shell: bash
      run: |
        make VERSION=${{ inputs.version }} build-gui-windows
        make publish-monitor-windows

    - name: copy compiled files
      shell: bash
      if: ${{inputs.release}}
      run: |
        cp -r ./src/flowcontrol-monitor/bin/Release/net5.0/win-x64/publish/ ./src/flowcontrol/build

    # zip assets
    - name: zip assets
      shell: bash
      if: ${{inputs.release}}
      run: |
        zip -rj flowcontrol.zip ./src/flowcontrol/build
        cp flowcontrol.zip /home/runner/work/flowcontrol.zip

    # upload windows x64 asset
    - name: upload windows x64 gui asset
      if: ${{inputs.release}}
      id: upload-desktop-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      with:
        upload_url: ${{inputs.release_url }}
        asset_path: /home/runner/work/flowcontrol.zip
        asset_name: flowcontrol-win-x64.zip
        asset_content_type: application/zip

    # clean assets
    - name: clean assets
      shell: bash
      if: ${{inputs.release}}
      run: |
        sudo rm -Rf flowcontrol.zip
        sudo rm -Rf ./src/flowcontrol/build
        sudo rm -Rf /home/runner/work/flowcontrol.zip
