---
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
# Setup go
      - uses: actions/setup-go@v1
        with:
          go-version: '1.16.3'
      - name: Install wails
        run: go get -u github.com/wailsapp/wails/cmd/wails
# Setup dotnet
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Build flowcontrol-monitor
        working-directory: ./src/flowcontrol-monitor
        run: dotnet publish -r win-x64 -c Release /p:PublishSingleFile=true --self-contained True
      - name: Copy compiled files
        working-directory: ./src/flowcontrol-monitor
        run: cp -r ./src/flowcontrol-monitor/bin/Release/net5.0/win-x64/publish/ ./src/flowcontrol/build
# Compile wails app
      - name: Build project
        working-directory: ./src/flowcontrol
        run: |
          wails build -x windows/amd64
          zip -r ./flowcontrol.zip build
          zip -r ./firmware.zip ./firmware
#Create release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
#Upload release assets
      - name: Upload desktop app asset
        id: upload-desktop-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./flowcontrol.zip
          asset_name: flowcontrol.zip
          asset_content_type: application/zip
      - name: Upload firmware asset
        id: upload-firmware-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./firmware.zip
          asset_name: firmware.zip
          asset_content_type: application/zip
